{
  "version": "https://jsonfeed.org/version/1.1",
  "title": "Hydro",
  "home_page_url": "https://hydro.js.org/",
  "feed_url": "https://hydro.js.org/feed.json",
  "items": [
    {
      "title": "Home",
      "url": "https://hydro.js.org/",
      "id": "https://hydro.js.org/",
      "content_html": "<p><a href=\"http://oj.upan.ink/\" target=\"_blank\" rel=\"noopener noreferrer\">One Online Judge</a></p>\n<h2 id=\"联系我们\"> 联系我们</h2>\n<p>OneOJ 用户群：1085853538</p>\n",
      "date_published": "2020-07-22T10:21:41.000Z",
      "date_modified": "2021-11-18T05:22:01.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "前端修改",
      "url": "https://hydro.js.org/dev/frontend-modify/",
      "id": "https://hydro.js.org/dev/frontend-modify/",
      "content_html": "<h1 id=\"前端修改\"> 前端修改</h1>\n<p>参考 <a href=\"/docs/system/frontend-modify/\">前端修改</a>。</p>\n",
      "date_published": "2021-08-13T04:13:21.000Z",
      "date_modified": "2021-08-13T04:13:21.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "权限节点",
      "url": "https://hydro.js.org/dev/PERM_PRIV/",
      "id": "https://hydro.js.org/dev/PERM_PRIV/",
      "content_html": "<h1 id=\"权限节点\"> 权限节点</h1>\n<p>Hydro 的权限使用位运算处理。<br>\n例：若某用户具有 <code>PRIV_EDIT_SYSTEM</code> 与 <code>PRIV_SET_PERM</code> 权限，应设置为 <code>(1&lt;&lt;0)|(1&lt;&lt;1)</code> （即 3）</p>\n<div><pre><code><span>export</span> <span>const</span> <span>PRIV</span> <span>=</span> <span>{</span>\n    <span>PRIV_NONE</span><span>:</span> <span>0</span><span>,</span>\n    <span>PRIV_EDIT_SYSTEM</span><span>:</span> <span>1</span> <span>&lt;&lt;</span> <span>0</span><span>,</span> <span>// renamed from PRIV_SET_PRIV</span>\n    <span>PRIV_SET_PERM</span><span>:</span> <span>1</span> <span>&lt;&lt;</span> <span>1</span><span>,</span>\n    <span>PRIV_USER_PROFILE</span><span>:</span> <span>1</span> <span>&lt;&lt;</span> <span>2</span><span>,</span>\n    <span>PRIV_REGISTER_USER</span><span>:</span> <span>1</span> <span>&lt;&lt;</span> <span>3</span><span>,</span>\n    <span>PRIV_READ_PROBLEM_DATA</span><span>:</span> <span>1</span> <span>&lt;&lt;</span> <span>4</span><span>,</span>\n    <span>PRIV_READ_PRETEST_DATA</span><span>:</span> <span>1</span> <span>&lt;&lt;</span> <span>5</span><span>,</span> <span>// deprecated</span>\n    <span>PRIV_READ_PRETEST_DATA_SELF</span><span>:</span> <span>1</span> <span>&lt;&lt;</span> <span>6</span><span>,</span> <span>// deprecated</span>\n    <span>PRIV_READ_RECORD_CODE</span><span>:</span> <span>1</span> <span>&lt;&lt;</span> <span>7</span><span>,</span>\n    <span>PRIV_VIEW_HIDDEN_RECORD</span><span>:</span> <span>1</span> <span>&lt;&lt;</span> <span>8</span><span>,</span>\n    <span>PRIV_JUDGE</span><span>:</span> <span>1</span> <span>&lt;&lt;</span> <span>9</span><span>,</span> <span>// (renamed)</span>\n    <span>PRIV_CREATE_DOMAIN</span><span>:</span> <span>1</span> <span>&lt;&lt;</span> <span>10</span><span>,</span>\n    <span>PRIV_VIEW_ALL_DOMAIN</span><span>:</span> <span>1</span> <span>&lt;&lt;</span> <span>11</span><span>,</span>\n    <span>PRIV_MANAGE_ALL_DOMAIN</span><span>:</span> <span>1</span> <span>&lt;&lt;</span> <span>12</span><span>,</span>\n    <span>PRIV_REJUDGE</span><span>:</span> <span>1</span> <span>&lt;&lt;</span> <span>13</span><span>,</span>\n    <span>PRIV_VIEW_USER_SECRET</span><span>:</span> <span>1</span> <span>&lt;&lt;</span> <span>14</span><span>,</span>\n    <span>PRIV_VIEW_JUDGE_STATISTICS</span><span>:</span> <span>1</span> <span>&lt;&lt;</span> <span>15</span><span>,</span>\n    <span>PRIV_CREATE_FILE</span><span>:</span> <span>1</span> <span>&lt;&lt;</span> <span>16</span><span>,</span>\n    <span>PRIV_UNLIMITED_QUOTA</span><span>:</span> <span>1</span> <span>&lt;&lt;</span> <span>17</span><span>,</span>\n    <span>PRIV_DELETE_FILE</span><span>:</span> <span>1</span> <span>&lt;&lt;</span> <span>18</span><span>,</span>\n    <span>PRIV_DELETE_FILE_SELF</span><span>:</span> <span>1</span> <span>&lt;&lt;</span> <span>19</span><span>,</span>\n    <span>PRIV_ALL</span><span>:</span> <span>-</span><span>1</span><span>,</span>\n\n    <span>PRIV_DEFAULT</span><span>:</span> <span>0</span><span>,</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br></div></div><p>可以看 <a href=\"https://github.com/hydro-dev/Hydro/blob/aa096322c3676e5e858e3a5021313a3d3afdf794/packages/hydrooj/src/model/builtin.ts#L216\" target=\"_blank\" rel=\"noopener noreferrer\">代码</a> 中关于此部分的内容。</p>\n",
      "date_published": "2021-01-25T18:27:09.000Z",
      "date_modified": "2021-04-20T05:18:27.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "使用 JavaScript 编写插件",
      "url": "https://hydro.js.org/dev/javascript/",
      "id": "https://hydro.js.org/dev/javascript/",
      "content_html": "<h1 id=\"使用-javascript-编写插件\"> 使用 JavaScript 编写插件</h1>\n<p>前置条件：NodeJS&gt;10.4<br>\n此教程将以编写剪贴板插件为例进行说明。</p>\n<p><strong>Hydro v2 更加推荐您使用 TypeScript。</strong></p>\n<h2 id=\"step1-初始化项目\"> Step1 初始化项目</h2>\n<p>使用 <code>hydrooj addon create</code> 快速在 <code>/root/addon</code> 下初始化一个插件或是在一个空文件夹中运行 <code>yarn init</code> 并按照提示填写相关信息。</p>\n<div><pre><code><span># 使用 yarn init 的样例</span>\n/workspace/hydro-plugin $ <span>yarn</span> init\n<span>yarn</span> init v1.22.4\nquestion name <span>(</span>hydro-plugin<span>)</span>: @hydrooj/pastebin\nquestion version <span>(</span><span>1.0</span>.0<span>)</span>: <span>0.0</span>.1\nquestion description: HydroOJ的剪贴板组件\nquestion entry point <span>(</span>index.js<span>)</span>: package.json\nquestion repository url: https://github.com/hydro-dev/pastebin.git\nquestion author: undefined <span>&lt;</span>i@undefined.moe<span>></span>\nquestion license <span>(</span>MIT<span>)</span>: MIT\nquestion private:\nsuccess Saved package.json\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><h2 id=\"step2-准备编写组件\"> Step2 准备编写组件</h2>\n<p>分析：剪贴板组件需要以下功能：</p>\n<ul>\n<li>与数据库交互来存储/检索相应文档。</li>\n<li>提供 /paste/create 路由以创建新文档。</li>\n<li>提供 /paste/show/:ID 来查看已创建的文档。</li>\n<li>根据用户ID进行鉴权，允许将文档设置为私密以防止他人查看。</li>\n</ul>\n<p>Hydro的推荐架构如下：</p>\n<ul>\n<li>handler.js: 用于处理路由</li>\n<li>model.js: 数据库模型</li>\n<li>lib.js: 不依赖于数据库等的库（如md5函数）</li>\n<li>script.js: 可能会被用户多次使用到的脚本（如重新计算rp）</li>\n<li>locale/: 翻译文件</li>\n<li>template/: 页面模板</li>\n<li>setting.yaml: 模块所用到的设置，格式在下方说明</li>\n</ul>\n<p>但注意上述结构并非全部必要，可以只创建插件需要使用的结构。</p>\n<h2 id=\"step3-model-js\"> Step3 model.js</h2>\n<p>提示：由于模块中不便于使用 require() 引入 Hydro 的文件，可以从 global.Hydro 中取出需要的模块。</p>\n<div><pre><code><span>const</span> <span>{</span> db <span>}</span> <span>=</span> global<span>.</span>Hydro<span>.</span>service<span>;</span> <span>// 数据库连接</span>\n<span>const</span> coll <span>=</span> db<span>.</span><span>collection</span><span>(</span><span>'paste'</span><span>)</span><span>;</span>\n\n<span>/**\n * 添加一个文档\n * @param {number} userId\n * @param {string} content\n * @param {boolean} isPrivate\n * @return {Promise&lt;string>}\n */</span>\n<span>async</span> <span>function</span> <span>add</span><span>(</span><span>userId<span>,</span> content<span>,</span> isPrivate</span><span>)</span> <span>{</span>\n    <span>const</span> pasteId <span>=</span> String<span>.</span><span>random</span><span>(</span><span>16</span><span>)</span><span>;</span> <span>// Hydro提供了此方法，创建一个长度为16的随机字符串</span>\n    <span>// 使用 mongodb 为数据库驱动，相关操作参照其文档</span>\n    <span>const</span> result <span>=</span> <span>await</span> coll<span>.</span><span>insertOne</span><span>(</span><span>{</span>\n        _id<span>:</span> pasteId<span>,</span>\n        owner<span>:</span> userId<span>,</span>\n        content<span>,</span>\n        isPrivate<span>,</span>\n    <span>}</span><span>)</span><span>;</span>\n    <span>return</span> result<span>.</span>insertedId<span>;</span> <span>// 返回插入的文档ID</span>\n<span>}</span>\n\n<span>/**\n * 查询一个文档\n * @param {string} pasteId\n * @return {Promise&lt;any>}\n */</span>\n<span>async</span> <span>function</span> <span>get</span><span>(</span><span>pasteId</span><span>)</span> <span>{</span>\n    <span>return</span> <span>await</span> coll<span>.</span><span>findOne</span><span>(</span><span>{</span> _id<span>:</span> pasteId <span>}</span><span>)</span><span>;</span>\n<span>}</span>\n\n<span>// 暴露这些接口</span>\nglobal<span>.</span>Hydro<span>.</span>model<span>.</span>pastebin <span>=</span> <span>{</span> add<span>,</span> <span>get</span> <span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br></div></div><h2 id=\"step4-handler-js\"> Step4 handler.js</h2>\n<p>在路由中定义所有的函数应均为异步函数，支持的函数有：prepare, get, post, post[Operation], cleanup\n具体流程如下：</p>\n<div><pre><code>先执行 prepare(args) （如果存在）\nargs 为传入的参数集合（包括 QueryString, Body, Path）中的全部参数，\n再执行 prepare(args) （如果存在）\n检查请求类型：\n\n为 GET ？\n  -&gt; 执行 get(args)\n为 POST ?\n  -&gt; 执行 post(args)\n  -&gt; 含有 operation 字段？\n       -&gt; 执行 post[Operation]\n\n执行 cleanup()\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><p>如果在 this.response.template 指定模板则渲染，否则直接返回 this.response.body 中的内容。</p>\n<ul>\n<li>在表单提交时的 operation 字段使用下划线，函数名使用驼峰命名。</li>\n</ul>\n<p>如 <code>&lt;input type=&quot;hidden&quot; name=&quot;operation&quot; value=&quot;confirm_delete&quot;&gt;</code> 对应 <code>postConfirmDelete</code> 函数。</p>\n<p>应当提供 <code>apply</code> 函数，并与定义的 Handler 一同挂载到 <code>global.Hydro.handler[模块名]</code> 位置。\n<code>apply</code> 函数将在初始化阶段被调用。</p>\n<div><pre><code><span>const</span> <span>{</span> Route<span>,</span> Handler <span>}</span> <span>=</span> global<span>.</span>Hydro<span>.</span>service<span>.</span>server<span>;</span> <span>// 注册路由所用工具</span>\n<span>const</span> <span>{</span> <span>PRIV</span> <span>}</span> <span>=</span> global<span>.</span>Hydro<span>.</span>model<span>.</span>builtin<span>;</span> <span>// 内置 Privilege 权限节点</span>\n<span>const</span> pastebin <span>=</span> global<span>.</span>Hydro<span>.</span>model<span>.</span>pastebin<span>;</span> <span>// 刚刚编写的pastebin模型</span>\n<span>const</span> <span>{</span> checkContent <span>}</span> <span>=</span> global<span>.</span>Hydro<span>.</span>lib<span>.</span>validator<span>;</span> <span>// 用于检查用户输入是否合法</span>\n<span>const</span> <span>{</span> NotFoundError <span>}</span> <span>=</span> global<span>.</span>Hydro<span>.</span>error<span>;</span>\n\n<span>// 创建新路由</span>\n<span>class</span> <span>PasteCreateHandler</span> <span>extends</span> <span>Handler</span> <span>{</span>\n    <span>// Get请求时触发该函数</span>\n    <span>async</span> <span>get</span><span>(</span><span>)</span> <span>{</span>\n        <span>// 检查用户是否登录，此处为多余（因为底部注册路由时已声明所需权限）</span>\n        <span>// 此方法适用于权限的动态检查</span>\n        <span>// this.checkPriv(PRIV.PRIV_USER_PROFILE);</span>\n        <span>this</span><span>.</span>response<span>.</span>template <span>=</span> <span>'paste_create.html'</span><span>;</span> <span>// 返回此页面</span>\n    <span>}</span>\n\n    <span>async</span> <span>post</span><span>(</span><span><span>{</span> content<span>,</span> <span>private</span> <span>=</span> <span>false</span> <span>}</span></span><span>)</span> <span>{</span> <span>// 从用户提交的表单中取出content和private字段</span>\n        <span>checkContent</span><span>(</span>content<span>)</span><span>;</span> <span>// 检查输入</span>\n        <span>// 在HTML表单提交的多选框中，选中值为 'on'，未选中则为空，需要进行转换</span>\n        <span>await</span> pastebin<span>.</span><span>add</span><span>(</span><span>this</span><span>.</span>user<span>.</span>_id<span>,</span> content<span>,</span> <span>!</span><span>!</span><span>private</span><span>)</span><span>;</span>\n        <span>// 将用户重定向到创建完成的url</span>\n        <span>this</span><span>.</span>response<span>.</span>redirect <span>=</span> <span>this</span><span>.</span><span>url</span><span>(</span><span>'paste_show'</span><span>,</span> <span>{</span> id<span>:</span> pasteid <span>}</span><span>)</span><span>;</span>\n    <span>}</span>\n<span>}</span>\n\n<span>class</span> <span>PasteShowHandler</span> <span>extends</span> <span>Handler</span> <span>{</span>\n    <span>async</span> <span>get</span><span>(</span><span>{</span> id <span>}</span><span>)</span> <span>{</span>\n        <span>const</span> doc <span>=</span> <span>await</span> pastebin<span>.</span><span>get</span><span>(</span>id<span>)</span><span>;</span>\n        <span>if</span> <span>(</span><span>!</span>doc<span>)</span> <span>throw</span> <span>new</span> <span>NotFoundError</span><span>(</span>id<span>)</span><span>;</span>\n        <span>if</span> <span>(</span>doc<span>.</span>isPrivate<span>)</span> <span>{</span>\n            <span>if</span> <span>(</span><span>this</span><span>.</span>user<span>.</span>_id <span>!==</span> doc<span>.</span>owner<span>)</span> <span>throw</span> <span>new</span> <span>PermissionError</span><span>(</span><span>)</span><span>;</span>\n        <span>}</span>\n        <span>this</span><span>.</span>response<span>.</span>body <span>=</span> <span>{</span> doc <span>}</span><span>;</span>\n        <span>this</span><span>.</span>response<span>.</span>template <span>=</span> <span>'paste_show.html'</span><span>;</span>\n    <span>}</span>\n\n    <span>async</span> <span>postDelete</span><span>(</span><span><span>{</span> id <span>}</span></span><span>)</span> <span>{</span>\n        <span>// 当提交表单并存在 operation 值为 delete 时执行。</span>\n        <span>// 本例中未实现删除功能，仅作为说明。</span>\n    <span>}</span>\n<span>}</span>\n\n<span>// Hydro会在服务初始化完成后调用该函数。</span>\n<span>async</span> <span>function</span> <span>apply</span><span>(</span><span>)</span> <span>{</span>\n    <span>// 注册一个名为 paste_create 的路由，匹配 '/paste/create'，</span>\n    <span>// 使用PasteCreateHandler处理，访问改路由需要PRIV.PRIV_USER_PROFILE权限</span>\n    <span>// 提示：路由匹配基于 path-to-regexp</span>\n    <span>Route</span><span>(</span><span>'paste_create'</span><span>,</span> <span>'/paste/create'</span><span>,</span> PasteCreateHandler<span>,</span> <span>PRIV</span><span>.</span><span>PRIV_USER_PROFILE</span><span>)</span><span>;</span>\n    <span>Route</span><span>(</span><span>'paste_show'</span><span>,</span> <span>'/paste/show/:id'</span><span>,</span> PasteShowHandler<span>)</span><span>;</span>\n<span>}</span>\n\nglobal<span>.</span>Hydro<span>.</span>handler<span>.</span>pastebin <span>=</span> apply<span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br></div></div><h2 id=\"step5-template\"> Step5 template</h2>\n<p>模板采用 nunjucks 语法。放置于 templates/ 文件夹下。<br>\n会在请求结束时根据 <code>response.template</code> 的值选择模板，并使用 <code>response.body</code> 的值进行渲染，存入 <code>response.body</code> 中。<br>\n若 <code>response.template</code> 为空或 <code>request.headers['accept'] == 'application/json'</code>，则跳过渲染步骤。</p>\n<h2 id=\"step6-locale\"> Step6 locale</h2>\n<p>用于提供多国翻译。格式与 Hydro 的 locale 文件夹格式相同。</p>\n",
      "date_published": "2021-02-02T07:43:29.000Z",
      "date_modified": "2021-08-13T07:34:39.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "使用 TypeScript 编写插件",
      "url": "https://hydro.js.org/dev/typescript/",
      "id": "https://hydro.js.org/dev/typescript/",
      "content_html": "<h1 id=\"使用-typescript-编写插件\"> 使用 TypeScript 编写插件</h1>\n<p>前置条件：NodeJS&gt;10.4<br>\n此教程将以编写剪贴板插件为例进行说明。</p>\n<h2 id=\"step1-初始化项目\"> Step1 初始化项目</h2>\n<p>使用 <code>hydrooj addon create</code> 快速在 <code>/root/addon</code> 下初始化一个插件或是在一个空文件夹中运行 <code>yarn init</code> 并按照提示填写相关信息。</p>\n<div><pre><code><span># 使用 yarn init 的样例</span>\n/workspace/hydro-plugin $ <span>yarn</span> init\n<span>yarn</span> init v1.22.4\nquestion name <span>(</span>hydro-plugin<span>)</span>: @hydrooj/pastebin\nquestion version <span>(</span><span>1.0</span>.0<span>)</span>: <span>0.0</span>.1\nquestion description: HydroOJ的剪贴板组件\nquestion entry point <span>(</span>index.js<span>)</span>: package.json\nquestion repository url: https://github.com/hydro-dev/pastebin.git\nquestion author: undefined <span>&lt;</span>i@undefined.moe<span>></span>\nquestion license <span>(</span>MIT<span>)</span>: MIT\nquestion private:\nsuccess Saved package.json\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><h2 id=\"step2-准备编写组件\"> Step2 准备编写组件</h2>\n<p>分析：剪贴板组件需要以下功能：</p>\n<ul>\n<li>与数据库交互来存储/检索相应文档。</li>\n<li>提供 /paste/create 路由以创建新文档。</li>\n<li>提供 /paste/show/:ID 来查看已创建的文档。</li>\n<li>根据用户ID进行鉴权，允许将文档设置为私密以防止他人查看。</li>\n</ul>\n<p>Hydro的推荐架构如下：</p>\n<ul>\n<li>handler.ts: 用于处理路由</li>\n<li>model.ts: 数据库模型</li>\n<li>lib.ts: 不依赖于数据库等的库（如 <code>md5</code> 函数）</li>\n<li>script.ts: 可能会被用户多次使用到的脚本（如重新计算 <code>rp</code> ）</li>\n<li>locale/: 翻译文件</li>\n<li>template/: 页面模板</li>\n<li>setting.yaml: 模块所用到的设置，格式在下方说明</li>\n</ul>\n<p>但注意上述结构并非全部必要，可以只创建插件需要使用的结构。</p>\n<h2 id=\"step3-model-js\"> Step3 model.js</h2>\n<p>提示：若不便于使用 import 引入 Hydro 的文件，可以从 <code>global.Hydro</code> 中取出需要的模块。</p>\n<div><pre><code><span>import</span> <span>'hydrooj'</span><span>;</span>\n<span>import</span> <span>*</span> <span>as</span> db <span>from</span> <span>'hydrooj/src/service/db'</span><span>;</span> <span>// const db = global.Hydro.service.db;</span>\n\n<span>const</span> coll <span>=</span> db<span>.</span><span>collection</span><span>(</span><span>'paste'</span><span>)</span><span>;</span>\n\n<span>interface</span> <span>Paste</span> <span>{</span>\n    _id<span>:</span> <span>string</span><span>;</span>\n    owner<span>:</span> <span>number</span><span>;</span>\n    content<span>:</span> <span>string</span><span>;</span>\n    isPrivate<span>:</span> <span>boolean</span><span>;</span>\n<span>}</span>\n\n<span>declare</span> <span>module</span> <span>'hydrooj'</span> <span>{</span>\n    <span>interface</span> <span>Collections</span> <span>{</span>\n        paste<span>:</span> Paste<span>;</span>\n    <span>}</span>\n<span>}</span>\n\n<span>export</span> <span>async</span> <span>function</span> <span>add</span><span>(</span><span>userId<span>:</span> <span>number</span><span>,</span> content<span>:</span> <span>string</span><span>,</span> isPrivate<span>:</span> <span>boolean</span></span><span>)</span><span>:</span> <span>Promise</span><span>&lt;</span><span>string</span><span>></span> <span>{</span>\n    <span>const</span> pasteId <span>=</span> String<span>.</span><span>random</span><span>(</span><span>16</span><span>)</span><span>;</span> <span>// Hydro提供了此方法，创建一个长度为16的随机字符串</span>\n    <span>// 使用 mongodb 为数据库驱动，相关操作参照其文档</span>\n    <span>const</span> result <span>=</span> <span>await</span> coll<span>.</span><span>insertOne</span><span>(</span><span>{</span>\n        _id<span>:</span> pasteId<span>,</span>\n        owner<span>:</span> userId<span>,</span>\n        content<span>,</span>\n        isPrivate<span>,</span>\n    <span>}</span><span>)</span><span>;</span>\n    <span>return</span> result<span>.</span>insertedId<span>;</span> <span>// 返回插入的文档ID</span>\n<span>}</span>\n\n<span>export</span> <span>async</span> <span>function</span> <span>get</span><span>(</span><span>pasteId<span>:</span> <span>string</span></span><span>)</span><span>:</span> <span>Promise</span><span>&lt;</span>Paste<span>></span> <span>{</span>\n    <span>return</span> <span>await</span> coll<span>.</span><span>findOne</span><span>(</span><span>{</span> _id<span>:</span> pasteId <span>}</span><span>)</span><span>;</span>\n<span>}</span>\n\n<span>// 暴露这些接口</span>\nglobal<span>.</span>Hydro<span>.</span>model<span>.</span>pastebin <span>=</span> <span>{</span> add<span>,</span> <span>get</span> <span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br></div></div><h2 id=\"step4-handler-js\"> Step4 handler.js</h2>\n<p>在路由中定义所有的函数应均为异步函数，支持的函数有：prepare, get, post, post[Operation], cleanup<br>\n具体流程如下：</p>\n<div><pre><code>先执行 prepare(args) （如果存在）\nargs 为传入的参数集合（包括 QueryString, Body, Path）中的全部参数，\n再执行 prepare(args) （如果存在）\n检查请求类型：\n\n为 GET ？\n  -&gt; 执行 get(args)\n为 POST ?\n  -&gt; 执行 post(args)\n  -&gt; 含有 operation 字段？\n       -&gt; 执行 post[Operation]\n\n执行 cleanup()\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><p>如果在 this.response.template 指定模板则渲染，否则直接返回 this.response.body 中的内容。</p>\n<ul>\n<li>在表单提交时的 operation 字段使用下划线，函数名使用驼峰命名。</li>\n</ul>\n<p>如 <code>&lt;input type=&quot;hidden&quot; name=&quot;operation&quot; value=&quot;confirm_delete&quot;&gt;</code> 对应 <code>postConfirmDelete</code> 函数。</p>\n<p>应当提供 <code>apply</code> 函数，并与定义的 Handler 一同挂载到 <code>global.Hydro.handler[模块名]</code> 位置。\n<code>apply</code> 函数将在初始化阶段被调用。</p>\n<div><pre><code><span>import</span> <span>{</span> Route<span>,</span> Handler <span>}</span> <span>from</span> <span>'hydrooj/src/service/server'</span><span>;</span>\n<span>import</span> <span>{</span> <span>PRIV</span> <span>}</span> <span>from</span> <span>'hydrooj/src/model/builtin'</span><span>;</span> <span>// 内置 Privilege 权限节点</span>\n<span>import</span> <span>{</span> isContent <span>}</span> <span>from</span> <span>'hydrooj/src/lib/validator'</span><span>;</span> <span>// 用于检查用户输入是否合法</span>\n<span>import</span> <span>{</span> NotFoundError <span>}</span> <span>from</span> <span>'hydrooj/src/error'</span><span>;</span>\n<span>import</span> <span>*</span> <span>as</span> pastebin <span>from</span> <span>'./pastebin'</span><span>;</span> <span>// 刚刚编写的pastebin模型</span>\n\n<span>// 创建新路由</span>\n<span>class</span> <span>PasteCreateHandler</span> <span>extends</span> <span>Handler</span> <span>{</span>\n    <span>// Get请求时触发该函数</span>\n    <span>async</span> <span>get</span><span>(</span><span>)</span> <span>{</span>\n        <span>// 检查用户是否登录，此处为多余（因为底部注册路由时已声明所需权限）</span>\n        <span>// 此方法适用于权限的动态检查</span>\n        <span>// this.checkPriv(PRIV.PRIV_USER_PROFILE);</span>\n        <span>this</span><span>.</span>response<span>.</span>template <span>=</span> <span>'paste_create.html'</span><span>;</span> <span>// 返回此页面</span>\n    <span>}</span>\n\n    <span>// 使用 isContent 检查输入</span>\n    @<span>param</span><span>(</span><span>'content'</span><span>,</span> Types<span>.</span>String<span>,</span> isContent<span>)</span>\n    @<span>param</span><span>(</span><span>'private'</span><span>,</span> Types<span>.</span>Boolean<span>)</span>\n    <span>// 从用户提交的表单中取出content和private字段</span>\n    <span>// domainId 为固定传入参数</span>\n    <span>async</span> <span>post</span><span>(</span><span>domainId<span>:</span> <span>string</span><span>,</span> content<span>:</span> <span>string</span><span>,</span> <span>private</span> <span>=</span> <span>false</span></span><span>)</span> <span>{</span>\n        <span>// 在HTML表单提交的多选框中，选中值为 'on'，未选中则为空，需要进行转换</span>\n        <span>await</span> pastebin<span>.</span><span>add</span><span>(</span><span>this</span><span>.</span>user<span>.</span>_id<span>,</span> content<span>,</span> <span>!</span><span>!</span><span>private</span><span>)</span><span>;</span>\n        <span>// 将用户重定向到创建完成的url</span>\n        <span>this</span><span>.</span>response<span>.</span>redirect <span>=</span> <span>this</span><span>.</span><span>url</span><span>(</span><span>'paste_show'</span><span>,</span> <span>{</span> id<span>:</span> pasteid <span>}</span><span>)</span><span>;</span>\n    <span>}</span>\n<span>}</span>\n\n<span>class</span> <span>PasteShowHandler</span> <span>extends</span> <span>Handler</span> <span>{</span>\n    @<span>param</span><span>(</span><span>'id'</span><span>,</span> Types<span>.</span>String<span>)</span>\n    <span>async</span> <span>get</span><span>(</span>domainId<span>:</span> <span>string</span><span>,</span> id<span>:</span> <span>string</span><span>)</span> <span>{</span>\n        <span>const</span> doc <span>=</span> <span>await</span> pastebin<span>.</span><span>get</span><span>(</span>id<span>)</span><span>;</span>\n        <span>if</span> <span>(</span><span>!</span>doc<span>)</span> <span>throw</span> <span>new</span> <span>NotFoundError</span><span>(</span>id<span>)</span><span>;</span>\n        <span>if</span> <span>(</span>doc<span>.</span>isPrivate <span>&amp;&amp;</span> <span>this</span><span>.</span>user<span>.</span>_id <span>!==</span> doc<span>.</span>owner<span>)</span> <span>{</span>\n            <span>throw</span> <span>new</span> <span>PermissionError</span><span>(</span><span>)</span><span>;</span>\n        <span>}</span>\n        <span>this</span><span>.</span>response<span>.</span>body <span>=</span> <span>{</span> doc <span>}</span><span>;</span>\n        <span>this</span><span>.</span>response<span>.</span>template <span>=</span> <span>'paste_show.html'</span><span>;</span>\n    <span>}</span>\n\n    @<span>param</span><span>(</span><span>'id'</span><span>,</span> Types<span>.</span>String<span>)</span>\n    <span>async</span> <span>postDelete</span><span>(</span><span>domainId<span>:</span> <span>string</span><span>,</span> id<span>:</span> <span>string</span></span><span>)</span> <span>{</span>\n        <span>// 当提交表单并存在 operation 值为 delete 时执行。</span>\n        <span>// 本例中未实现删除功能，仅作为说明。</span>\n    <span>}</span>\n<span>}</span>\n\n<span>// Hydro会在服务初始化完成后调用该函数。</span>\n<span>export</span> <span>async</span> <span>function</span> <span>apply</span><span>(</span><span>)</span> <span>{</span>\n    <span>// 注册一个名为 paste_create 的路由，匹配 '/paste/create'，</span>\n    <span>// 使用PasteCreateHandler处理，访问改路由需要PRIV.PRIV_USER_PROFILE权限</span>\n    <span>// 提示：路由匹配基于 path-to-regexp</span>\n    <span>Route</span><span>(</span><span>'paste_create'</span><span>,</span> <span>'/paste/create'</span><span>,</span> PasteCreateHandler<span>,</span> <span>PRIV</span><span>.</span><span>PRIV_USER_PROFILE</span><span>)</span><span>;</span>\n    <span>Route</span><span>(</span><span>'paste_show'</span><span>,</span> <span>'/paste/show/:id'</span><span>,</span> PasteShowHandler<span>)</span><span>;</span>\n<span>}</span>\n\nglobal<span>.</span>Hydro<span>.</span>handler<span>.</span>pastebin <span>=</span> apply<span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br></div></div><h2 id=\"step5-template\"> Step5 template</h2>\n<p>模板采用 nunjucks 语法。放置于 templates/ 文件夹下。<br>\n会在请求结束时根据 <code>response.template</code> 的值选择模板，并使用 <code>response.body</code> 的值进行渲染，存入 <code>response.body</code> 中。<br>\n若 <code>response.template</code> 为空或 <code>request.headers['accept'] == 'application/json'</code>，则跳过渲染步骤。</p>\n<h2 id=\"step6-locale\"> Step6 locale</h2>\n<p>用于提供多国翻译。格式与 Hydro 的 locale 文件夹格式相同。</p>\n",
      "date_published": "2021-02-02T07:43:29.000Z",
      "date_modified": "2021-08-13T07:34:39.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "介绍",
      "url": "https://hydro.js.org/docs/",
      "id": "https://hydro.js.org/docs/",
      "content_html": "<h1 id=\"介绍\"> 介绍</h1>\n<p>为什么使用 Hydro？</p>\n<ul>\n<li>\n<p>安全：使用 cgroup 进行隔离，杜绝卡评测；</p>\n</li>\n<li>\n<p>高效：Hydro 使用了沙箱复用技术，拥有极高的评测效率；</p>\n</li>\n<li>\n<p>扩展：Hydro 支持安装额外模块进行扩展；</p>\n</li>\n<li>\n<p>强大：配合 Judge 模块（或 HydroJudge 独立评测机），可支持 spj，交互题，提交答案题，文件IO 等多种特性；</p>\n</li>\n<li>\n<p>自定：所有权限节点均可自由设置；</p>\n</li>\n<li>\n<p>易上手：无需改动源代码，系统设置中预留了大量可自行修改的内容；管理逻辑简洁；</p>\n</li>\n<li>\n<p>社区：Hydro 正在持续维护中；</p>\n</li>\n<li>\n<p>如果您正在使用 HustOJ，可以导出题目为 FPS 文件后使用 <a href=\"/plugins/fps-importer\">fps-importer 插件</a> 直接导入 Hydro。</p>\n</li>\n<li>\n<p>如果您正在使用 QDUOJ， 可以导出题目为 QDUOJ-zip 格式后使用 import-qduoj 插件直接导入 Hydro。</p>\n</li>\n<li>\n<p>如果您正在使用 Vijos， 可以直接使用 <a href=\"/plugins/migrate-vijos\">migrate-vijos 插件</a> 导入所有数据至 Hydro。</p>\n</li>\n<li>\n<p>如果您正在使用 SYZOJ 或是 SYZOJ-NG，可以使用内置的 <a href=\"/docs/user/problem/#从-syzoj-导入\">Import From SYZOJ 功能</a> 将题目导入 Hydro。</p>\n</li>\n</ul>\n<h2 id=\"功能对比\"> 功能对比</h2>\n<p>此处对比了 Hydro 与其他主流 OJ 系统的功能。（只进行在不修改源代码情况下的对比）</p>\n<div><pre><code>+：支持\n=：部分支持\n?: 未知\n-：不支持\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">功能</th>\n<th style=\"text-align:center\">Hydro</th>\n<th style=\"text-align:center\">HustOJ</th>\n<th style=\"text-align:center\">SYZOJ</th>\n<th style=\"text-align:center\">QDUOJ</th>\n<th style=\"text-align:center\">Vijos</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">安装</td>\n<td style=\"text-align:center\">一键脚本</td>\n<td style=\"text-align:center\">一键脚本</td>\n<td style=\"text-align:center\">手动搭建</td>\n<td style=\"text-align:center\">docker</td>\n<td style=\"text-align:center\">docker</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">数据库</td>\n<td style=\"text-align:center\">MongoDB</td>\n<td style=\"text-align:center\">MySQL</td>\n<td style=\"text-align:center\">MariaDB</td>\n<td style=\"text-align:center\">Postgres</td>\n<td style=\"text-align:center\">MongoDB</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">测试数据存储</td>\n<td style=\"text-align:center\">本地/S3 <sup></sup></td>\n<td style=\"text-align:center\">本地</td>\n<td style=\"text-align:center\">本地</td>\n<td style=\"text-align:center\">本地</td>\n<td style=\"text-align:center\">数据库</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">多评测机</td>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">=</td>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">+</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">测试数据同步</td>\n<td style=\"text-align:center\">按需抓取</td>\n<td style=\"text-align:center\">全量同步</td>\n<td style=\"text-align:center\">全量同步</td>\n<td style=\"text-align:center\">全量同步</td>\n<td style=\"text-align:center\">按需抓取</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">比赛</td>\n<td style=\"text-align:center\">ACM/OI/IOI</td>\n<td style=\"text-align:center\">ACM/OI <sup></sup></td>\n<td style=\"text-align:center\">ACM/OI/IOI</td>\n<td style=\"text-align:center\">ACM/OI/IOI</td>\n<td style=\"text-align:center\">ACM/OI</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">作业功能</td>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">+</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">修改编译命令/添加语言</td>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">+</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">权限系统 <sup></sup></td>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">+ <sup></sup></td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">+</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">训练计划(题单)</td>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">- <sup></sup></td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">+</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">团队</td>\n<td style=\"text-align:center\">+ <sup></sup></td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">+</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Hack</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">-</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">SpecialJudge</td>\n<td style=\"text-align:center\">+ <sup></sup></td>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">-</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Subtask</td>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">-</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">交互题</td>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">-</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">RemoteJudge</td>\n<td style=\"text-align:center\">Codeforces/SPOJ/UOJ/POJ</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">-</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">题目导入</td>\n<td style=\"text-align:center\">fps/syzoj/qduoj/hydro</td>\n<td style=\"text-align:center\">fps</td>\n<td style=\"text-align:center\">syzoj</td>\n<td style=\"text-align:center\">fps</td>\n<td style=\"text-align:center\">-</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">后端语言</td>\n<td style=\"text-align:center\">NodeJS</td>\n<td style=\"text-align:center\">PHP</td>\n<td style=\"text-align:center\">NodeJS</td>\n<td style=\"text-align:center\">Python</td>\n<td style=\"text-align:center\">Python</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">前端框架</td>\n<td style=\"text-align:center\">React</td>\n<td style=\"text-align:center\">BootStrap</td>\n<td style=\"text-align:center\">Semantic UI</td>\n<td style=\"text-align:center\">Vue</td>\n<td style=\"text-align:center\">React</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"截图\"> 截图</h2>\n<p><img src=\"./pictures/pict1.png\" alt=\"img\">\n<img src=\"./pictures/pict2.png\" alt=\"img\">\n<img src=\"./pictures/pict3.png\" alt=\"img\">\n<img src=\"./pictures/pict4.png\" alt=\"img\"></p>\n<h2 id=\"现在开始\"> 现在开始</h2>\n<p>点击 <a href=\"/docs/install/\">部署</a> ，开始部署您的 OJ 吧！</p>\n<hr>\n<section>\n<ol>\n<li id=\"fn1\"><p>S3 指所有兼容 Amazon S3 协议的服务，包括腾讯COS，阿里OSS 等。 </p>\n</li>\n<li id=\"fn2\"><p>切换比赛模式仅能通过修改设置全局更改。 </p>\n</li>\n<li id=\"fn3\"><p>此处的权限系统指 除用户/管理员二元化权限之外的 的更细粒度的权限划分。 </p>\n</li>\n<li id=\"fn4\"><p>HustOJ的权限管理需要手动操作数据库。 </p>\n</li>\n<li id=\"fn5\"><p>部分第三方修改版提供了该功能，但未开源。 </p>\n</li>\n<li id=\"fn6\"><p>通过域功能，允许用户创建域并在域内拥有管理员权限。域之间仅共享账号数据。 </p>\n</li>\n<li id=\"fn7\"><p>支持所有主流 SPJ 格式。 </p>\n</li>\n</ol>\n</section>\n",
      "date_published": "2021-01-25T18:27:09.000Z",
      "date_modified": "2021-10-10T09:13:34.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "用户文档",
      "url": "https://hydro.js.org/docs/user/",
      "id": "https://hydro.js.org/docs/user/",
      "content_html": "<h1 id=\"用户文档\"> 用户文档</h1>\n<h2 id=\"题目难度\"> 题目难度</h2>\n<p>Hydro 中题目的难度，根据递交数、通过率以及每个递交的递交时间和评测结果，通过算法计算得出。</p>\n<ol>\n<li>一般地，难度的数值越大，该题目越难。</li>\n<li>新题目的难度可能不准确；在题目获得大量递交之后，难度才会变得较为准确。</li>\n<li>越早递交评测的用户代码的评测结果对题目难度影响越大。</li>\n<li>题目的难度由算法计算得出，有可能出现不准确的结果。</li>\n</ol>\n<h2 id=\"参与比赛\"> 参与比赛</h2>\n<p>您可以在比赛的详细界面内点击“参与比赛”按钮进行参与。\n比赛过程中“成绩表”会根据比赛规则显示排名。\n在比赛截止之后，您仍然可以订正其中的题目，但“成绩表”将停止更新。</p>\n<h2 id=\"发布讨论\"> 发布讨论</h2>\n<p>若您想发布一个讨论，<strong>请先进入一个讨论节点</strong>，之后点击“创建一个讨论”按钮并填写：</p>\n<ul>\n<li>标题；</li>\n<li>内容；</li>\n<li>是否高亮：若选择后，该贴的左边将有醒目的红色线条（需要“高亮讨论”权限）；</li>\n<li>Pin：该讨论是否置顶（需要“置顶讨论”权限）。</li>\n</ul>\n<p>之后点击“创建”按钮进行发布。</p>\n<h2 id=\"认领作业\"> 认领作业</h2>\n<p>您可以在作业的详情页面中，点击“认领作业”。<br>\n在作业开始之前，您无法查看作业中的题目。<br>\n在作业持续时间内，您与他人的做题情况会被实时统计在“成绩表”内。<br>\n在作业进入延期阶段后，您仍然可以提交题目，但成绩表内的分数将根据延期扣分规则按百分比折算。<br>\n在作业截止之后，您仍然可以订正其中的题目，但“成绩表”将停止更新。</p>\n",
      "date_published": "2021-05-08T17:02:49.000Z",
      "date_modified": "2021-05-08T17:02:49.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "域",
      "url": "https://hydro.js.org/docs/user/domain/",
      "id": "https://hydro.js.org/docs/user/domain/",
      "content_html": "<h1 id=\"域\"> 域</h1>\n<h2 id=\"简介\"> 简介</h2>\n<p>域，可以理解为 OJ 中的 OJ。<br>\n用户有权限为自己创建多个域。（取决于用户组设定，需要 PRIV_CREATE_DOMAIN 权限）。\n同一 Hydro 实例上的多个域间完全独立，仅用户信息相通（您在一个 Hydro 实例上注册账户后，在该实例的所有域中均有效）。</p>\n<h2 id=\"创建域\"> 创建域</h2>\n<p>登录账号后，在“我的”选项卡中找到“我的域”，并点击“创建域”，填入以下信息：</p>\n<ul>\n<li>ID： 每个域有一个唯一的 ID，将会在域 URL 中体现。<strong>创建后无法修改。</strong></li>\n<li>名称： 域的名字，创建后可以更改。</li>\n<li>公告： 域主页上显示的公告，创建后可以更改。</li>\n<li>avatar： 域头像，与用户头像同理，可以使用 <code>gravatar:email</code> 或 <code>qq:id</code> 或 <code>github:name</code> 的格式添加。将会在“我的域”界面内显示。</li>\n</ul>\n<p>创建域后，您将在此域中拥有管理员权限，可以在域内进行添加题目/创建比赛等操作。</p>\n<h2 id=\"初始化讨论节点\"> 初始化讨论节点</h2>\n<p>您可以在“管理域”选项卡中点击“初始化讨论节点”按钮初始化讨论节点。</p>\n<h2 id=\"访问控制\"> 访问控制</h2>\n<p><strong>未登录用户将默认使用 <code>guest</code> 权限，登录用户将默认使用 <code>default</code> 权限。</strong>（所以将登陆用户设为 <code>default</code> 权限后并不会显示在“管理用户”页内）<br>\n所以将一个用户的权限设为 <code>default</code> 和将用户移出该域是等价的。</p>\n<h2 id=\"创建比赛\"> 创建比赛</h2>\n<p>若您想要创建比赛，您可以在“比赛”选项卡中点击“创建一个比赛”按钮，并填写：</p>\n<ul>\n<li>规则；</li>\n<li>标题；</li>\n<li>开始日期，时间；</li>\n<li>持续时间；</li>\n<li>题目： 此比赛包含的题目的 <strong>ID</strong>，若有多个则用逗号分隔；</li>\n<li>内容： 该比赛的详细介绍；</li>\n<li>是否 Rated： 该比赛是否会改变参加选手的 RP。</li>\n</ul>\n<p>设置完后可点击“创建”按钮创建比赛。</p>\n<h2 id=\"创建作业\"> 创建作业</h2>\n<p>若您想要创建作业，您可以在“作业”选项卡中点击“创建作业”按钮，并填写：</p>\n<ul>\n<li>标题；</li>\n<li>开始日期、时间；</li>\n<li>结束日期、时间；</li>\n<li>最长延期；</li>\n<li>延期递交扣分规则；</li>\n<li>题目：此作业包含的题目的 <strong>ID</strong>，若有多个则用逗号分隔；</li>\n<li>内容：该作业的详细介绍。</li>\n</ul>\n<p>之后点击“创建”按钮进行创建。</p>\n<h2 id=\"创建训练\"> 创建训练</h2>\n<p>若您想要创建训练，您可以在“训练” 项卡中点击“新建训练计划”，填写以下信息：</p>\n<ul>\n<li>标题：该训练的标题；</li>\n<li>简介：该训练的简介，会与标题同时显示在列表页面中；</li>\n<li>说明：该训练的详细信息；</li>\n<li>计划：该训练的具体题目及计划信息，其格式如下：</li>\n</ul>\n<div><pre><code>[\n  {章节详细信息},\n  {章节详细信息},\n  ...\n  {章节详细信息}\n]\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>其中，“章节详细信息”的包含以下部分：</p>\n<ul>\n<li><code>_id</code>：章节数字编号；</li>\n<li><code>title</code>：章节标题；</li>\n<li><code>requireNids</code>：训练此章节之前需要完成的章节数字编号，若无要求则留空，若有多个则使用逗号分隔；</li>\n<li><code>pids</code>：此章节中包含的题目的 <strong>ID</strong>，若有多个则使用逗号分隔。</li>\n</ul>\n<p><strong>举例</strong>：若要在训练中创建三个章节，章节中分别有 <strong>ID</strong> 为 1，2，3 的题目。其中章节一、二无前置条件，章节三需要同时完成章节一、二后才能进行，则格式如下：</p>\n<div><pre><code><span>[</span>\n  <span>{</span>\n    <span>\"_id\"</span><span>:</span> <span>1</span><span>,</span>\n    <span>\"title\"</span><span>:</span> <span>\"入门\"</span><span>,</span>\n    <span>\"requireNids\"</span><span>:</span> <span>[</span><span>]</span><span>,</span>\n    <span>\"pids\"</span><span>:</span> <span>[</span><span>1</span><span>]</span>\n  <span>}</span><span>,</span>\n  <span>{</span>\n    <span>\"_id\"</span><span>:</span> <span>2</span><span>,</span>\n    <span>\"title\"</span><span>:</span> <span>\"精通\"</span><span>,</span>\n    <span>\"requireNids\"</span><span>:</span> <span>[</span><span>]</span><span>,</span>\n    <span>\"pids\"</span><span>:</span> <span>[</span><span>2</span><span>]</span>\n  <span>}</span><span>,</span>\n  <span>{</span>\n    <span>\"_id\"</span><span>:</span> <span>3</span><span>,</span>\n    <span>\"title\"</span><span>:</span> <span>\"大师\"</span><span>,</span>\n    <span>\"requireNids\"</span><span>:</span> <span>[</span><span>1</span><span>,</span><span>2</span><span>]</span><span>,</span>\n    <span>\"pids\"</span><span>:</span> <span>[</span><span>3</span><span>]</span>\n  <span>}</span>\n<span>]</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div>",
      "date_published": "2021-08-13T04:33:40.000Z",
      "date_modified": "2021-08-13T04:33:40.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "题目",
      "url": "https://hydro.js.org/docs/user/problem/",
      "id": "https://hydro.js.org/docs/user/problem/",
      "content_html": "<h1 id=\"题目\"> 题目</h1>\n<h2 id=\"创建题目\"> 创建题目</h2>\n<p>拥有 PERM_CREATE_PROBLEM 的用户均可以新建题目。<br>\n请点击题库页面右下角的 <code>创建题目</code> 按钮。</p>\n<div><p>Tips</p>\n<p>题目 ID 不能全为数字。若留空则使用自动分配的数字题号。</p>\n</div>\n<h2 id=\"导入题目\"> 导入题目</h2>\n<h3 id=\"从-hydro-导入\"> 从 Hydro 导入</h3>\n<p>上传 Hydro 导出的题目压缩包即可。</p>\n<h3 id=\"从-syzoj-导入\"> 从 SYZOJ 导入</h3>\n<p>在“导入自”一栏中填入要导入的题目的 URL（源站必须基于原版 SYZOJ/SYZOJ-NG 搭建），然后点击“导入”键即可。<br>\n题目除测试数据以外的部分会直接导入，测试数据将会异步导入（取决于网络状况，这可能需要一段时间，请耐心等待）。</p>\n<h3 id=\"从-fps-文件导入\"> 从 FPS 文件导入</h3>\n<p>见插件 <a href=\"/plugins/fps-importer/\">fps-importer</a>。</p>\n<h3 id=\"从-qduoj-导入\"> 从 QDUOJ 导入</h3>\n<p>见插件 import-qduoj。\n</p>\n<h2 id=\"编辑\"> 编辑</h2>\n<h3 id=\"题面\"> 题面</h3>\n<p>题面使用 Markdown 语法，并进行了部分扩展。</p>\n<p>支持对样例数据分组显示：</p>\n<pre><code>```input1\n1 2\n```\n\n```output1\n3\n```</code></pre>\n<p>后接的数字为测试点编号，将自动合并，并左右分栏显示。</p>\n<p>支持从附加文件引用资源。（您可以先创建题目，上传相关文件后再编辑该题目）</p>\n<ul>\n<li>附加文件下载链接： <code>[file](file://input.in)</code></li>\n<li>从附加文件引用一张图片： <code>![img](file://foo.jpg)</code></li>\n<li>从附加文件引用 pdf 作为题面：<code>@[pdf](file://foo.pdf)</code> （该功能在部分环境可能不正常。请考虑使用 <a href=\"https://github.com/Ri-moe/hydro-pdf\" target=\"_blank\" rel=\"noopener noreferrer\">hydro-pdf</a> 插件。）</li>\n<li>从附加文件引用 word 文档作为题面： <code>@[doc](file://foo.docx)</code> （依赖 onlyoffice 插件）\n</li>\n</ul>\n<p>题面支持合并表格：</p>\n<div><pre><code><span><span><span>|</span><span> 1   </span><span>|</span><span> 1   </span><span>|</span><span> 3   </span><span>|</span><span> 4   </span><span>|</span><span> 5   </span><span>|</span>\n</span><span><span>|</span> <span>---</span> <span>|</span> <span>---</span> <span>|</span> <span>---</span> <span>|</span> <span>---</span> <span>|</span> <span>---</span> <span>|</span>\n</span><span><span>|</span><span> 1   </span><span>|</span><span> 1   </span><span>|</span><span> 2   </span><span>|</span><span> 2   </span><span>|</span><span> 6   </span><span>|</span>\n<span>|</span><span> 1   </span><span>|</span><span> 1   </span><span>|</span><span> 2   </span><span>|</span><span> 2   </span><span>|</span><span> 7   </span><span>|</span>\n<span>|</span><span> 1   </span><span>|</span><span> 4   </span><span>|</span><span> 3   </span><span>|</span><span> 5   </span><span>|</span><span> 5   </span><span>|</span>\n</span></span></code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>将被渲染为：</p>\n<p><img src=\"./pictures/pict1.png\" alt=\"img\"></p>\n<p>支持内嵌 HTML：（用来对付部分 Markdown 搞不定的东西）</p>\n<div><pre><code><span><span><span>&lt;</span>span</span> <span>bgcolor</span><span><span>=</span><span>\"</span>red<span>\"</span></span><span>></span></span>foo<span><span><span>&lt;/</span>span</span><span>></span></span>\n</code></pre>\n<div><span>1</span><br></div></div><h3 id=\"标签\"> 标签</h3>\n<p>可点击右侧分类面板快速添加标签，也可以用英文半角逗号分隔多个标签。</p>\n<h2 id=\"文件\"> 文件</h2>\n<p>您可以在题目右侧“文件”面板上传测试数据和附加文件。（支持拖拽文件至相应位置进行上传）<br>\n<a href=\"/docs/user/testdata\">测试数据格式</a>。</p>\n<h2 id=\"客观题\"> 客观题</h2>\n<p>由于客观题的题面和测试数据配置均与其他题目不同，所以这里单独给出配置客观题的方法。</p>\n<h3 id=\"题面-2\"> 题面</h3>\n<p>题面需要以 yaml 格式给出。</p>\n<div><pre><code><span># 第 0 道题目</span>\n<span>-</span> <span>desc</span><span>:</span> 这是一道普普通通的选择题\n  <span>choices</span><span>:</span> <span># 如果是选择题需要包含 choise 选项并列出题目的每一个选项的具体信息。</span>\n  <span>-</span> A. 1 + 1 = 1\n  <span>-</span> B. 1 + 1 = 2\n  <span>-</span> C. 1 + 1 = 3\n<span># 第 1 道题目</span>\n<span>-</span> <span>desc</span><span>:</span> 1 + 1 = <span>?</span>\n<span># 若不包含 choise 选项则该题为填空题</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><p>上面这个例子对应的题面为：</p>\n<p><img src=\"./pictures/pict2.png\" alt=\"img\"></p>\n<h3 id=\"测试数据\"> 测试数据</h3>\n<p>仅需要配置 config.yaml 即可，不需要上传其他文件。</p>\n<div><pre><code><span>type</span><span>:</span> objective <span># 表明该题为客观题</span>\n<span>outputs</span><span>:</span> <span># 列举出每一题的正确选项与对应的得分</span>\n  <span>-</span> <span>[</span>B. 1 + 1 = 2<span>,</span> <span>50</span><span>]</span>\n  <span>-</span> <span>[</span><span>'2'</span><span>,</span> <span>50</span><span>]</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div>",
      "image": "file://foo.jpg",
      "date_published": "2021-08-13T04:13:21.000Z",
      "date_modified": "2021-09-16T09:52:14.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "跨域引用题目",
      "url": "https://hydro.js.org/docs/user/quote-problem/",
      "id": "https://hydro.js.org/docs/user/quote-problem/",
      "content_html": "<h1 id=\"跨域引用题目\"> 跨域引用题目</h1>\n<p>跨域引用题目可以帮助用户在自己的域中创建比赛/作业时引用其他域中的题目。（无法在训练计划中引用其他域中的题目）</p>\n<p>以 A 域需要引用 B 域中题目 ID 为 1 的题目为例：</p>\n<ol>\n<li>在 B 域的“管理域&gt;编辑域资料&gt;Share problem with domain”中加入 A 域的名字（如果填 <code>*</code> 表示允许所有域引用本域中的题目）。</li>\n<li>在 A 域的比赛/作业的编辑页中需要填写题目 ID 的地方填入 <code>B:1</code> 表示引用 B 域 ID 为 1 的题目。</li>\n</ol>\n",
      "date_published": "2021-08-15T14:08:05.000Z",
      "date_modified": "2021-09-18T11:53:01.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "测试数据格式",
      "url": "https://hydro.js.org/docs/user/testdata/",
      "id": "https://hydro.js.org/docs/user/testdata/",
      "content_html": "<h1 id=\"测试数据格式\"> 测试数据格式</h1>\n<h2 id=\"自动模式\"> 自动模式</h2>\n<div><p>Tips</p>\n<p>您可以直接选择文件（支持多选）上传或将文件拖拽至相应位置上传。<br>\n若上传文件为 zip 格式，将会自动进行解压操作。</p>\n</div>\n<p>对于一般的题目，您只需提供 <code>.in</code> 和 <code>.out/.ans</code> 文件，以下是一个例子。</p>\n<div><pre><code>喵? tree\n<span>.</span>\n├── a1.in\n├── a1.out\n├── a2.in\n├── a2.out\n├── a3.in\n└── a3.out\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>测试数据将被自动识别，并使用 1S 256MB 的限制。</p>\n<h2 id=\"使用配置文件\"> 使用配置文件</h2>\n<div><p>Tips</p>\n<p>推荐您在线编辑题目配置（点击 Create File，输入文件名 <code>config.yaml</code>），将检查配置有效性。</p>\n</div>\n<p>上传 <code>config.yaml</code> 文件即可，文件格式如下（下方所有样例均为可选项，若无说明则预填写的内容即为默认值）：</p>\n<div><pre><code><span># 题目类型，可以为 default(比对输出，含spj), submit_answer（提交答案）, interactive（交互题）</span>\n<span>type</span><span>:</span> default\n\n<span># 全局时空限制（此处的限制优先级低于测试点的限制）</span>\n<span>time</span><span>:</span> 1s\n<span>memory</span><span>:</span> 128m\n\n<span># 输入输出文件名（例：使用 foo.in 和 foo.out），若使用标准 IO 删除此配置项即可</span>\n<span>filename</span><span>:</span> foo\n\n<span># 此部分设置当题目类型为 default 时生效</span>\n<span># 比较器类型，支持的值有 default（直接比对，忽略行末空格和文件末换行）, ccr, cena, hustoj, lemon, qduoj, syzoj, testlib</span>\n<span>checker_type</span><span>:</span> default\n<span># 比较器文件（当比较器类型不为 default 时填写）</span>\n<span># 文件路径（位于压缩包中的路径）</span>\n<span># 将通过扩展名识别语言，与编译命令处一致。在默认配置下，C++ 扩展名应为 .cc 而非 .cpp</span>\n<span>checker</span><span>:</span> chk.cc\n\n<span># 此部分设置当题目类型为interactive时生效</span>\n<span># 交互器路径（位于压缩包中的路径）</span>\n<span>interactor</span><span>:</span> interactor.cc\n\n<span># Extra files 额外文件</span>\n<span># These files will be copied to the working directory 这些文件将被复制到工作目录。</span>\n<span># 提示：您无需手动上传 testlib.h。</span>\n<span>user_extra_files</span><span>:</span>\n  <span>-</span> extra_input.txt\n<span>judge_extra_files</span><span>:</span>\n  <span>-</span> extra_file.txt\n\n<span># Test Cases 测试数据列表</span>\n<span># If neither CASES or SUBTASKS are set(or config.yaml doesn't exist), judge will try to locate them automaticly.</span>\n<span># 如果 CASES 和 SUBTASKS 都没有设置或 config.yaml 不存在， 系统会自动尝试识别数据点。</span>\n<span># We support these names for auto mode: 自动识别支持以下命名方式：</span>\n<span># 1. [name(optional)][number].(in/out/ans)         RegExp: /^([a-zA-Z]*)([0-9]+).in$/</span>\n<span>#   examples: </span>\n<span>#     - c1.in / c1.out</span>\n<span>#     - 1.in / 1.out</span>\n<span>#     - c1.in / c1.ans</span>\n<span># 2. input[number].txt / output[number].txt        RegExp: /^(input)([0-9]+).txt$/</span>\n<span>#   - example: input1.txt / input2.txt</span>\n<span>#</span>\n<span># The CASES option has higher priority than the SUBTASKS option!</span>\n<span># 在有 CASES 设置项时，不会读取 SUBTASKS 设置项！</span>\n<span>score</span><span>:</span> <span>50</span>     <span># 单个测试点分数</span>\n<span>time</span><span>:</span> 1s      <span># 时间限制</span>\n<span>memory</span><span>:</span> 256m  <span># 内存限制</span>\n<span>cases</span><span>:</span>\n  <span>-</span> <span>input</span><span>:</span> abc.in\n    <span>output</span><span>:</span> def.out\n  <span>-</span> <span>input</span><span>:</span> ghi.in\n    <span>output</span><span>:</span> jkl.out\n<span># 或使用Subtask项：</span>\n<span>subtasks</span><span>:</span>\n  <span>-</span> <span>score</span><span>:</span> <span>30</span>\n    <span>type</span><span>:</span> min <span># 可选 min/max/sum，分别表示取所有测试点最小值、所有测试点最大值、所有测试点之和</span>\n    <span>time</span><span>:</span> 1s\n    <span>memory</span><span>:</span> 64m\n    <span>cases</span><span>:</span>\n      <span>-</span> <span>input</span><span>:</span> a.in\n        <span>output</span><span>:</span> a.out\n      <span>-</span> <span>input</span><span>:</span> b.in\n        <span>output</span><span>:</span> b.out\n  <span>-</span> <span>score</span><span>:</span> <span>70</span>\n    <span>time</span><span>:</span> 0.5s\n    <span>memory</span><span>:</span> 32m\n    <span>if</span><span>:</span> <span>[</span><span>0</span><span>]</span> <span># 可选，传入数组，表示仅在subtask0通过时此subtask才计分</span>\n    <span>cases</span><span>:</span>\n      <span>-</span> <span>input</span><span>:</span> c.in\n        <span>output</span><span>:</span> c.out\n      <span>-</span> <span>input</span><span>:</span> d.in\n        <span>output</span><span>:</span> d.out\n\n<span># 提交语言限制</span>\n<span># 列举出所有本题允许使用的语言对应的代码（需要和评测机 lang.yaml 内的语言代码相同）</span>\n<span>langs</span><span>:</span>\n  <span>-</span> c\n  <span>-</span> cc\n  <span>-</span> pas\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br></div></div><p>可以在 <a href=\"https://hydro.ac/d/system_test/\" target=\"_blank\" rel=\"noopener noreferrer\">此题库</a> 中找到各种类型题目的配置示例。</p>\n",
      "date_published": "2021-09-16T09:52:14.000Z",
      "date_modified": "2021-09-18T11:53:01.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "插件",
      "url": "https://hydro.js.org/plugins/",
      "id": "https://hydro.js.org/plugins/",
      "content_html": "<h1 id=\"插件\"> 插件</h1>\n<p>Hydro 支持使用插件扩展自身所支持的功能。</p>\n<div><p>Note</p>\n<p>插件对站点的所有内容具有完全的访问权限，请不要启用来历不明的插件。</p>\n</div>\n<h2 id=\"附加组件列表\"> 附加组件列表</h2>\n<p>Hydro 官方目前提供了以下附加组件：</p>\n<table>\n<thead>\n<tr>\n<th>ID</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>@hydrooj/fps-importer</td>\n<td>支持导入 fps 格式的题目</td>\n</tr>\n<tr>\n<td>@hydrooj/geoip</td>\n<td>GeoIP 支持，用于显示用户登录地</td>\n</tr>\n<tr>\n<td>@hydrooj/hydrojudge</td>\n<td>评测组件</td>\n</tr>\n<tr>\n<td>@hydrooj/import-qduoj</td>\n<td>导入 qduoj 导出的文件</td>\n</tr>\n<tr>\n<td>@hydrooj/login-with-github</td>\n<td>允许用户使用 GitHub 登录</td>\n</tr>\n<tr>\n<td>@hydrooj/login-with-google</td>\n<td>允许用户使用 Google 登录</td>\n</tr>\n<tr>\n<td>@hydrooj/login-with-osu</td>\n<td>允许用户使用 osu! 登录</td>\n</tr>\n<tr>\n<td>@hydrooj/login-with-qq</td>\n<td>允许用户使用 QQ 登录</td>\n</tr>\n<tr>\n<td>@hydrooj/migrate-vijos</td>\n<td>从 vijos4 的自动升级工具</td>\n</tr>\n<tr>\n<td>@hydrooj/recaptcha</td>\n<td>注册时调用 reCAPTCHA 验证码</td>\n</tr>\n<tr>\n<td>@hydrooj/ui-default</td>\n<td>Hydro 的默认用户界面</td>\n</tr>\n<tr>\n<td>@hydrooj/onlyoffice</td>\n<td>显示 doc/docx 格式题目</td>\n</tr>\n<tr>\n<td>@hydrooj/sonic</td>\n<td>使用 sonic 增强题目搜索功能</td>\n</tr>\n<tr>\n<td>@hydrooj/vjudge</td>\n<td>Codeforces! SPOJ!</td>\n</tr>\n</tbody>\n</table>\n<p>以下插件由社区提供：</p>\n<table>\n<thead>\n<tr>\n<th>ID</th>\n<th>作者</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"//github.com/Ri-moe/hydro-pdf\">hydro-pdf-preview</a></td>\n<td>wuxianucw</td>\n<td>使用 PDF.js 在题面中插入 PDF</td>\n</tr>\n</tbody>\n</table>\n<p>大部分插件的配置均可在安装后于 控制面板&gt;系统设置 中找到。</p>\n<h2 id=\"安装\"> 安装</h2>\n<p>先全局安装所需模块，再向 hydrooj 注册即可。例：安装 @hydrooj/geoip</p>\n<div><pre><code><span>yarn</span> global <span>add</span> @hydrooj/geoip\nhydrooj addon <span>add</span> @hydrooj/geoip\n</code></pre>\n<div><span>1</span><br><span>2</span><br></div></div><p><strong>安装完插件后需要重启 hydrooj 以使插件生效。</strong></p>\n<h2 id=\"更新\"> 更新</h2>\n<div><pre><code><span>yarn</span> global upgrade-interactive --latest\n</code></pre>\n<div><span>1</span><br></div></div><h2 id=\"卸载\"> 卸载</h2>\n<div><pre><code><span>yarn</span> global remove @hydrooj/geoip\nhydrooj addon remove @hydrooj/geoip\n</code></pre>\n<div><span>1</span><br><span>2</span><br></div></div>",
      "date_published": "2020-07-22T10:21:41.000Z",
      "date_modified": "2021-07-08T12:52:05.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "fps-importer",
      "url": "https://hydro.js.org/plugins/fps-importer/",
      "id": "https://hydro.js.org/plugins/fps-importer/",
      "content_html": "<h1 id=\"fps-importer\"> fps-importer</h1>\n<h2 id=\"从-fps-文件导入题目\"> 从 fps 文件导入题目</h2>\n<p>在题库右侧“创建题目”一栏中选择“从 FPS 文件导入”。<br>\n在打开的窗口中，您可以上传：</p>\n<ul>\n<li>fps 格式的 xml 文件</li>\n<li>zip 文件，其中包含了一个或多个 fps 格式的 xml 文件</li>\n</ul>\n<p>由于防止解析 fps 文件消耗大量内存，将拒绝导入超过 64MiB 的文件。<br>\nxml 文件需要为 UTF8 编码，如果不是则需要将其转换为 UTF8 编码。<br>\n若您的文件超过大小限制，可考虑现在本地拆分测试数据，在题目创建后再手动上传。</p>\n",
      "date_published": "2021-04-20T05:10:12.000Z",
      "date_modified": "2021-09-18T11:53:01.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "migrate-vijos",
      "url": "https://hydro.js.org/plugins/migrate-vijos/",
      "id": "https://hydro.js.org/plugins/migrate-vijos/",
      "content_html": "<h1 id=\"migrate-vijos\"> migrate-vijos</h1>\n<h2 id=\"从-vijos-升级\"> 从 Vijos 升级</h2>\n<div><p>Note</p>\n<p>迁移会删除当前 Hydro 的所有数据（含用户账户信息）并移入 vj4 的数据。<br>\n请注意备份相关文件。</p>\n</div>\n<p>请先完成 Hydro 的部署并完成对文件服务的配置(setting_file)。<br>\n在迁移数据之前，请先停止正在运行的 vj4 服务，仅保留其数据库开启。<br>\n请注意 Hydro 所在的数据库不应和源 vj4 数据库相同。<br>\n若您使用 vj4-docker ，可更改 <code>docker-compose.yml</code> 将数据库映射至其他本机端口。</p>\n<p>安装插件后，您应当能够在 控制面板&gt;脚本管理 中找到名为 <code>migrateVijos</code> 的脚本。<br>\n其参数格式如下：</p>\n<div><pre><code><span>{</span><span>\"host\"</span><span>:</span><span>\"localhost\"</span><span>,</span><span>\"port\"</span><span>:</span><span>27017</span><span>,</span><span>\"name\"</span><span>:</span><span>\"vj4\"</span><span>,</span><span>\"username\"</span><span>:</span><span>\"\"</span><span>,</span><span>\"password\"</span><span>:</span><span>\"\"</span><span>}</span>\n</code></pre>\n<div><span>1</span><br></div></div><ul>\n<li>host: 数据库地址</li>\n<li>port: 数据库端口</li>\n<li>name: 数据库名</li>\n<li>username&amp;password: 账号密码，若无则填写空字符串</li>\n</ul>\n<div><p>Tips</p>\n<p>vj4-docker 中数据库名为 vj4，无账号密码。</p>\n</div>\n<p>当脚本运行完成后，请重启 Hydro 实例，会自动完成之后的升级操作。\n迁移后，请使用原 vj4 的管理员账号登录实例。</p>\n<div><p>Note</p>\n<p>若您的 vj4 是由 vj2 或 tyvj 升级而来，在迁移完成后请不要卸载该插件，否则可能导致部分用户无法登录。</p>\n</div>\n",
      "date_published": "2021-03-19T04:39:08.000Z",
      "date_modified": "2021-09-08T06:48:52.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "hydrojudge",
      "url": "https://hydro.js.org/plugins/hydrojudge/",
      "id": "https://hydro.js.org/plugins/hydrojudge/",
      "content_html": "<h1 id=\"hydrojudge\"> hydrojudge</h1>\n<h2 id=\"准备\"> 准备</h2>\n<p>在配置评测机之前，请确认您的站点已经可以访问并正常登录/注册。</p>\n<p>您应该预先下载您所要支持的语言的编译器，若您在配置完评测机后 升级/重新安装 了编译器，您需要重新启动沙箱。</p>\n<p>前往 <a href=\"https://github.com/criyle/go-judge/releases\" target=\"_blank\" rel=\"noopener noreferrer\">criyle/go-judge</a> 下载 executorserver。</p>\n<table>\n<thead>\n<tr>\n<th>系统版本</th>\n<th>文件名</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Windows 7+</td>\n<td>executorserver.exe</td>\n</tr>\n<tr>\n<td>Linux 4.4+</td>\n<td>executorserver-amd64</td>\n</tr>\n<tr>\n<td>MacOS ?+</td>\n<td>executorserver-macos</td>\n</tr>\n</tbody>\n</table>\n<p>Executorserver 需要在后台<strong>以 root 权限</strong>运行并监听 <code>127.0.0.1:5050</code> 。\n可使用 pm2 进行管理。</p>\n<div><p>Tips</p>\n<p>如果您是 vj4 用户，请使用“作为独立进程”配置（设置处需设成 <code>type: vj4</code>）。</p>\n</div>\n<h2 id=\"安装\"> 安装</h2>\n<h3 id=\"作为附加组件\"> 作为附加组件</h3>\n<div><p>Tips</p>\n<p>由于用附加组件安装的评测机与 Hydro 必须在同一台服务器上，每一个 Hydro 实例最多只能有一台评测机由附加组件安装。</p>\n</div>\n<p>在安装 Hydro 的机器上运行下面的指令安装 <code>@hydrooj/hydrojudge</code>：</p>\n<div><pre><code><span>yarn</span> global <span>add</span> @hydrooj/hydrojudge\nhydrooj addon <span>add</span> @hydrooj/hydrojudge\n</code></pre>\n<div><span>1</span><br><span>2</span><br></div></div><p>重启 Hydro 后 hydrojudge 即可正常运行。</p>\n<h3 id=\"作为独立进程\"> 作为独立进程</h3>\n<div><p>Tips</p>\n<p>该方法可以帮助您在任意服务器上部署评测机。</p>\n</div>\n<p>首先需要创建一个有 PRIV_JUDGE 权限的账户，具体方法参照 <a href=\"/docs/cli/#创建评测账号\">此处</a>。（在部署 Hydro 的服务器上运行）<br>\n（vj4 用户需参照 <a href=\"https://github.com/vijos/vj4#judging\" target=\"_blank\" rel=\"noopener noreferrer\">vj4 的方法</a> 创建账户）</p>\n<p>然后在运行评测机的服务器上安装 hydrojudge 插件：</p>\n<div><pre><code><span>yarn</span> global <span>add</span> @hydrooj/hydrojudge\n</code></pre>\n<div><span>1</span><br></div></div><p>创建目录 <code>~/.config/hydro</code>，在该目录下创建文件 <code>judge.yaml</code>，配置文件格式如下：</p>\n<div><pre><code><span>hosts</span><span>:</span>\n  <span>localhost</span><span>:</span>\n    <span>type</span><span>:</span> hydro <span># vj4 用户请在此处填写 vj4</span>\n    <span>server_url</span><span>:</span> http<span>:</span>//localhost<span>:</span>8888/ <span># Hydro 运行的网址</span>\n    <span>uname</span><span>:</span> judge <span># 评测账号用户名</span>\n    <span>password</span><span>:</span> abc123 <span># 评测账号密码</span>\n    <span>detail</span><span>:</span> <span>true</span> <span># 默认为 true</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>设置完之后，使用下面的指令即可开始运行（可以使用 pm2 管理）：</p>\n<div><pre><code>hydrojudge\n</code></pre>\n<div><span>1</span><br></div></div><h2 id=\"更新\"> 更新</h2>\n<p>HydroJudge 会发布不定期更新。您可以使用 <code>yarn global upgrade-interactive --latest</code> 来检测并进行更新。</p>\n<h2 id=\"关闭\"> 关闭</h2>\n<h3 id=\"作为附加组件-2\"> 作为附加组件</h3>\n<p>在 系统设置&gt;hydrojudge 中有一栏 Disable builtin judge，将它勾上，然后重启 Hydro 即可。</p>\n<h3 id=\"作为独立进程-2\"> 作为独立进程</h3>\n<p>根据开启的方法关闭即可。</p>\n<h2 id=\"卸载\"> 卸载</h2>\n<p>关闭后运行下面指令即可。</p>\n<div><pre><code><span>yarn</span> global remove @hydrooj/hydrojudge\nhydrooj addon remove @hydrooj/hydrojudge\n</code></pre>\n<div><span>1</span><br><span>2</span><br></div></div><h2 id=\"评测设置\"> 评测设置</h2>\n<h3 id=\"作为附加组件-3\"> 作为附加组件</h3>\n<p>在 系统设置&gt;hydrojudge 修改对应的参数，然后重启 Hydro 和 hydrojudge 即可。</p>\n<h3 id=\"作为独立进程-3\"> 作为独立进程</h3>\n<p>如果有需要修改单题测试点数量上限等设置，可以在 <code>~/.config/hydro/judge.yaml</code> 的末尾添加下列内容：</p>\n<div><pre><code><span>testcases_max</span><span>:</span> <span>100</span> <span># 单题最多测试点数量</span>\n<span>total_time_limit</span><span>:</span> <span>120</span> <span># 单题最大总测试时长</span>\n<span>parallelism</span><span>:</span> <span>2</span> <span># 单评测机评测进程数量</span>\n<span># 更多可选配置均可添加在此处，格式与前面的三排类似</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>在 <a href=\"https://github.com/hydro-dev/Hydro/blob/9c0afa38e3e6fa886ab9e9237847893fa6714392/packages/hydrojudge/src/config.ts#L12\" target=\"_blank\" rel=\"noopener noreferrer\">此处</a> 的设置均可添加到此处。</p>\n<h2 id=\"修改编译选项-添加新语言支持\"> 修改编译选项/添加新语言支持</h2>\n<p>对于已安装内置评测机的用户（无论内置评测机是否启动），在 控制面板&gt;系统设置 中修改 judge.langs 配置项即可；对于没有安装内置评测机的用户，需要在 <code>~/.config/hydro/langs.yaml</code> 中配置。</p>\n<p>按照 <a href=\"https://github.com/hydro-dev/Hydro/blob/71bb2f0b517be8f6966f97f835f2521f179b3d84/packages/hydrooj/setting.yaml#L12\" target=\"_blank\" rel=\"noopener noreferrer\">此处</a> 格式即可。</p>\n<p>如果您添加了新的语言，您还需要前往 控制面板&gt;系统设置 中修改 Language Highlight ID 与 Monaco language modes。<br>\n分别表示选择对应的语言后的高亮设置（基于 PrismJS）和 Monaco 编辑器语法规则设置。</p>\n<p>修改完后重启 Hydro 和 hydrojudge 即可。</p>\n<h2 id=\"测试数据格式\"> 测试数据格式</h2>\n<p>参照 <a href=\"/docs/user/problem/#测试数据格式\">测试数据格式</a> 配置。</p>\n<h2 id=\"调整沙箱空间大小\"> 调整沙箱空间大小</h2>\n<div><p>Note</p>\n<p>如果不调整沙箱的空间大小，当您的评测使用文件 IO 且输入输出文件较大时可能会引发错误。</p>\n</div>\n<div><p>Tips</p>\n<p>可以在服务器上运行下面的代码找到 hydro-sandbox 的运行目录：</p>\n<div><pre><code>pm2 info hydro-sandbox <span>|</span> <span>grep</span> <span>\"exec cwd\"</span>\n</code></pre>\n<div><span>1</span><br></div></div></div>\n<p>将 <a href=\"https://github.com/criyle/go-judge/blob/master/mount.yaml\" target=\"_blank\" rel=\"noopener noreferrer\">mount.yaml</a> 下载并放置在 sandbox 的运行目录下。然后修改第 50 行和第 54 行的 <code>size</code> 和 <code>nr_inodes</code> 的大小至您想要的大小，保存后重启 sandbox 即可完成更改。</p>\n<h2 id=\"c-c-彩色编译错误信息\"> C/C++ 彩色编译错误信息</h2>\n<ol>\n<li>确认您安装了支持彩色输出的编译器；</li>\n<li>在系统设置中，将 C/C++ 编译命令后加上 <code>-fdiagnostics-color=always</code></li>\n</ol>\n<p>例：</p>\n<div><pre><code><span>c</span><span>:</span>\n  <span>compile</span><span>:</span> /usr/bin/gcc <span>-</span>O2 <span>-</span>Wall <span>-</span>std=c99 <span>-</span>o $<span>{</span>name<span>}</span> foo.c <span>-</span>lm <span>-</span>fdiagnostics<span>-</span>color=always\n</code></pre>\n<div><span>1</span><br><span>2</span><br></div></div><h2 id=\"开大程序运行栈空间\"> 开大程序运行栈空间</h2>\n<p>在很多时候系统默认为程序提供的栈空间并不能满足我们的需求，此时我们需要手动为用户程序提供更大的栈空间。</p>\n<p>修改 pm2 中 hydro-sandbox 的启动参数为 <code>ulimit -s unlimited &amp;&amp; /path-to/sandbox</code> 即可：</p>\n<div><p>Tips</p>\n<p>您需要将 <code>/path-to/sandbox</code> 更换为您机器上 sandbox 的绝对路径。</p>\n</div>\n<div><pre><code>pm2 del hydro-sandbox\npm2 start <span>\"ulimit -s unlimited &amp;&amp; /path-to/sandbox\"</span> --name hydro-sandbox\n</code></pre>\n<div><span>1</span><br><span>2</span><br></div></div><h2 id=\"提高测评精度\"> 提高测评精度</h2>\n<p>禁用 CPU 频率缩放与 Intel 睿频加速技术，防止 CPU 频率波动。</p>\n<p>禁用内存地址空间随机化，以使得存在内存寻址错误的代码能够得到更多可重复的结果，可以通过在 <code>/etc/sysctl.conf</code> 中添加下面这行并运行 <code>sudo sysctl -p</code> 实现：</p>\n<div><pre><code>kernel.randomize_va_space = 0\n</code></pre>\n<div><span>1</span><br></div></div>",
      "date_published": "2021-02-21T07:51:42.000Z",
      "date_modified": "2021-10-05T09:49:09.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "recaptcha",
      "url": "https://hydro.js.org/plugins/recaptcha/",
      "id": "https://hydro.js.org/plugins/recaptcha/",
      "content_html": "<h1 id=\"recaptcha\"> recaptcha</h1>\n<div><p>Tips</p>\n<p>我们采用 reCAPTCHA v3 来检验注册者是否是人类，在注册过程中没有看见传统验证码属正常现象。</p>\n</div>\n<p>前往 <a href=\"https://www.google.com/recaptcha/admin/create\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.google.com/recaptcha/admin/create</a> 创建 reCAPTCHA 密钥。<br>\nreCAPTCHA 类型请选择“reCAPTCHA 第 3 版”。</p>\n<p>创建成功后将客户端密钥和服务端密钥分别填入系统设置 recaptcha 栏下的 <code>key</code> 和 <code>secret</code> 中，重启 Hydro 后 reCAPTCHA 即可正常工作。</p>\n",
      "date_published": "2021-04-20T05:10:12.000Z",
      "date_modified": "2021-04-20T05:10:12.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "Sonic",
      "url": "https://hydro.js.org/plugins/sonic/",
      "id": "https://hydro.js.org/plugins/sonic/",
      "content_html": "<h1 id=\"sonic\"> Sonic</h1>\n<p>首先请安装 <a href=\"https://github.com/valeriansaliou/sonic\" target=\"_blank\" rel=\"noopener noreferrer\">sonic-server</a>。</p>\n<p>Q: 怎么安装？<br>\nA: <code>cargo install sonic-server</code></p>\n<p>Q: cargo 是什么？<br>\nA: 自行搜索。</p>\n<p>Q: 问什么安装失败了？<br>\nA: 自行解决。</p>\n<p>Q: 安装之后做什么？<br>\nA: 启动，进入 Hydro 系统设置面板，配置 sonic 后端地址，重启 Hydro，在脚本管理中运行重建题目索引，参数留空即可。</p>\n<p>至此，搜索功能应当可以正常使用。</p>\n",
      "date_published": "2021-05-17T14:57:03.000Z",
      "date_modified": "2021-05-17T14:57:03.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "Vjudge",
      "url": "https://hydro.js.org/plugins/vjudge/",
      "id": "https://hydro.js.org/plugins/vjudge/",
      "content_html": "<h1 id=\"vjudge\"> Vjudge</h1>\n<h2 id=\"codeforces\"> Codeforces</h2>\n<p>安装插件后创建名为 codeforces 的域，进入数据库 <code>db.domain.updateOne({_id:'codeforces'},{$set:{mount:'codeforces'}});</code></p>\n<p>在 codeforces 的域设置中，将 <code>allowedLangs</code> 如下配置：</p>\n<div><pre><code>codeforces,codeforces.43,codeforces.52,codeforces.50,codeforces.54,codeforces.59,codeforces.61,codeforces.65,codeforces.9,codeforces.28,codeforces.32,codeforces.12,codeforces.60,codeforces.36,codeforces.48,codeforces.19,codeforces.3,codeforces.4,codeforces.51,codeforces.13,codeforces.6,codeforces.7,codeforces.31,codeforces.40,codeforces.41,codeforces.67,codeforces.49,codeforces.20,codeforces.34,codeforces.55\n</code></pre>\n<div><span>1</span><br></div></div><p>在 vjudge 表中插入如下条目：</p>\n<div><pre><code><span>{</span>type<span>:</span><span>'codeforces'</span><span>,</span> handle<span>:</span><span>'&lt;codeforces login handle>'</span><span>,</span> password<span>:</span><span>'&lt;codeforces login password>'</span><span>}</span>\n</code></pre>\n<div><span>1</span><br></div></div><p>将如下配置添加至 langs 设置末尾：</p>\n<div><pre><code><span>codeforces</span><span>:</span>\n  <span>execute</span><span>:</span> none\n  <span>display</span><span>:</span> Codeforces\n  <span>domain</span><span>:</span>\n  <span>-</span> codeforces <span># Allow domain 'codeforces' to use these languages</span>\n<span>codeforces.43</span><span>:</span>\n  <span>highlight</span><span>:</span> cpp astyle<span>-</span>c\n  <span>monaco</span><span>:</span> cpp\n  <span>display</span><span>:</span> GNU GCC C11 5.1.0\n  <span>comment</span><span>:</span> //\n<span>codeforces.52</span><span>:</span>\n  <span>highlight</span><span>:</span> cpp astyle<span>-</span>c\n  <span>monaco</span><span>:</span> cpp\n  <span>display</span><span>:</span> Clang++17 Diagnostics\n  <span>comment</span><span>:</span> //\n<span>codeforces.50</span><span>:</span>\n  <span>highlight</span><span>:</span> cpp astyle<span>-</span>c\n  <span>monaco</span><span>:</span> cpp\n  <span>display</span><span>:</span> GNU G++14 6.4.0\n  <span>comment</span><span>:</span> //\n<span>codeforces.54</span><span>:</span>\n  <span>highlight</span><span>:</span> cpp astyle<span>-</span>c\n  <span>monaco</span><span>:</span> cpp\n  <span>display</span><span>:</span> GNU G++17 7.3.0\n  <span>comment</span><span>:</span> //\n<span>codeforces.59</span><span>:</span>\n  <span>highlight</span><span>:</span> cpp astyle<span>-</span>c\n  <span>monaco</span><span>:</span> cpp\n  <span>display</span><span>:</span> Microsoft Visual C++ 2017\n  <span>comment</span><span>:</span> //\n<span>codeforces.61</span><span>:</span>\n  <span>highlight</span><span>:</span> cpp astyle<span>-</span>c\n  <span>monaco</span><span>:</span> cpp\n  <span>display</span><span>:</span> GNU G++17 9.2.0 (64 bit<span>,</span> msys 2)\n  <span>comment</span><span>:</span> //\n<span>codeforces.65</span><span>:</span>\n  <span>highlight</span><span>:</span> cpp astyle<span>-</span>cs\n  <span>monaco</span><span>:</span> csharp\n  <span>display</span><span>:</span> C<span># 8, .NET Core 3.1</span>\n  <span>comment</span><span>:</span> //\n<span>codeforces.9</span><span>:</span>\n  <span>highlight</span><span>:</span> cpp astyle<span>-</span>cs\n  <span>monaco</span><span>:</span> csharp\n  <span>display</span><span>:</span> C<span># Mono 6.8</span>\n  <span>comment</span><span>:</span> //\n<span>codeforces.28</span><span>:</span>\n  <span>highlight</span><span>:</span> d\n  <span>monaco</span><span>:</span> plain\n  <span>display</span><span>:</span> D DMD32 v2.091.0\n  <span>comment</span><span>:</span> //\n<span>codeforces.32</span><span>:</span>\n  <span>highlight</span><span>:</span> go\n  <span>display</span><span>:</span> Go 1.15.6\n  <span>comment</span><span>:</span> //\n<span>codeforces.12</span><span>:</span>\n  <span>highlight</span><span>:</span> haskell\n  <span>display</span><span>:</span> Haskell GHC 8.10.1\n  <span>comment</span><span>:</span> <span>-</span><span>-</span>\n<span>codeforces.60</span><span>:</span>\n  <span>highlight</span><span>:</span> java astyle<span>-</span>java\n  <span>monaco</span><span>:</span> java\n  <span>display</span><span>:</span> Java 11.0.6\n  <span>comment</span><span>:</span> //\n<span>codeforces.36</span><span>:</span>\n  <span>highlight</span><span>:</span> java astyle<span>-</span>java\n  <span>monaco</span><span>:</span> java\n  <span>display</span><span>:</span> Java 1.8.0_241\n  <span>comment</span><span>:</span> //\n<span>codeforces.48</span><span>:</span>\n  <span>highlight</span><span>:</span> kotlin\n  <span>display</span><span>:</span> Kotlin 1.4.0\n  <span>comment</span><span>:</span> //\n<span>codeforces.19</span><span>:</span>\n  <span>highlight</span><span>:</span> ocaml\n  <span>monaco</span><span>:</span> plain\n  <span>display</span><span>:</span> OCaml 4.02.1\n  <span>comment</span><span>:</span> <span>[</span><span>'(*'</span><span>,</span><span>'*)'</span><span>]</span>\n<span>codeforces.3</span><span>:</span>\n  <span>highlight</span><span>:</span> pascal\n  <span>display</span><span>:</span> Delphi 7\n  <span>comment</span><span>:</span> //\n<span>codeforces.4</span><span>:</span>\n  <span>highlight</span><span>:</span> pascal\n  <span>display</span><span>:</span> Free Pascal 3.0.2\n  <span>comment</span><span>:</span> //\n<span>codeforces.51</span><span>:</span>\n  <span>highlight</span><span>:</span> pascal\n  <span>display</span><span>:</span> PascalABC.NET 3.4.2\n  <span>comment</span><span>:</span> //\n<span>codeforces.13</span><span>:</span>\n  <span>highlight</span><span>:</span> perl\n  <span>display</span><span>:</span> Perl 5.20.1\n  <span>comment</span><span>:</span> <span>'#'</span>\n<span>codeforces.6</span><span>:</span>\n  <span>highlight</span><span>:</span> php\n  <span>display</span><span>:</span> PHP 7.2.13\n  <span>comment</span><span>:</span> //\n<span>codeforces.7</span><span>:</span>\n  <span>highlight</span><span>:</span> python\n  <span>display</span><span>:</span> Python 2.7.18\n  <span>comment</span><span>:</span> <span>'#'</span>\n<span>codeforces.31</span><span>:</span>\n  <span>highlight</span><span>:</span> python\n  <span>display</span><span>:</span> Python 3.9.1\n  <span>comment</span><span>:</span> <span>'#'</span>\n<span>codeforces.40</span><span>:</span>\n  <span>highlight</span><span>:</span> python\n  <span>display</span><span>:</span> PyPy 2.7 (7.3.0)\n  <span>comment</span><span>:</span> <span>'#'</span>\n<span>codeforces.41</span><span>:</span>\n  <span>highlight</span><span>:</span> python\n  <span>display</span><span>:</span> PyPy 3.7 (7.3.0)\n  <span>comment</span><span>:</span> <span>'#'</span>\n<span>codeforces.67</span><span>:</span>\n  <span>highlight</span><span>:</span> ruby\n  <span>display</span><span>:</span> Ruby 3.0.0\n  <span>comment</span><span>:</span> <span>'#'</span>\n<span>codeforces.49</span><span>:</span>\n  <span>highlight</span><span>:</span> rust\n  <span>display</span><span>:</span> Rust 1.49.0\n  <span>comment</span><span>:</span> //\n<span>codeforces.20</span><span>:</span>\n  <span>highlight</span><span>:</span> scala\n  <span>display</span><span>:</span> Scala 2.12.8\n  <span>comment</span><span>:</span> //\n<span>codeforces.34</span><span>:</span>\n  <span>highlight</span><span>:</span> javascript\n  <span>display</span><span>:</span> JavaScript V8 4.8.0\n  <span>comment</span><span>:</span> //\n<span>codeforces.55</span><span>:</span>\n  <span>highlight</span><span>:</span> javascript\n  <span>display</span><span>:</span> Node.js 12.6.3\n  <span>comment</span><span>:</span> //\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br><span>80</span><br><span>81</span><br><span>82</span><br><span>83</span><br><span>84</span><br><span>85</span><br><span>86</span><br><span>87</span><br><span>88</span><br><span>89</span><br><span>90</span><br><span>91</span><br><span>92</span><br><span>93</span><br><span>94</span><br><span>95</span><br><span>96</span><br><span>97</span><br><span>98</span><br><span>99</span><br><span>100</span><br><span>101</span><br><span>102</span><br><span>103</span><br><span>104</span><br><span>105</span><br><span>106</span><br><span>107</span><br><span>108</span><br><span>109</span><br><span>110</span><br><span>111</span><br><span>112</span><br><span>113</span><br><span>114</span><br><span>115</span><br><span>116</span><br><span>117</span><br><span>118</span><br><span>119</span><br><span>120</span><br><span>121</span><br><span>122</span><br><span>123</span><br><span>124</span><br><span>125</span><br><span>126</span><br><span>127</span><br><span>128</span><br><span>129</span><br><span>130</span><br><span>131</span><br><span>132</span><br><span>133</span><br></div></div><p>之后再重启 Hydro 即可。</p>\n",
      "date_published": "2021-06-22T03:41:36.000Z",
      "date_modified": "2021-08-16T04:00:57.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "开发环境部署",
      "url": "https://hydro.js.org/dev/",
      "id": "https://hydro.js.org/dev/",
      "content_html": "<h1 id=\"开发环境部署\"> 开发环境部署</h1>\n<p>您可以使用 <a href=\"https://gitpod.io/#https://github.com/hydro-dev/Hydro\" target=\"_blank\" rel=\"noopener noreferrer\">Gitpod</a> 快速打开配置完成的开发环境或是按照下方说明进行手动配置。（由于 Gitpod 的限制，hydrojudge 模块无法正常运行，若需要开发 hydrojudge 相关内容请自行部署）</p>\n<h2 id=\"安装依赖\"> 安装依赖</h2>\n<div><p>Note</p>\n<p>CentOS 的内核版本过于老旧，可能会导致沙箱安全性问题。</p>\n</div>\n<ul>\n<li>MongoDB：Hydro 需要 <a href=\"https://www.mongodb.com/try/download/community\" target=\"_blank\" rel=\"noopener noreferrer\">MongoDB</a> 提供数据库服务。</li>\n<li>S3：可使用 <a href=\"https://min.io\" target=\"_blank\" rel=\"noopener noreferrer\">MinIO</a> 提供 S3 服务。</li>\n<li>NodeJS：请安装 NodeJS &gt;=14 版本。（勿使用 apt 安装 nodejs） （推荐使用 <a href=\"https://nvm.sh/\" target=\"_blank\" rel=\"noopener noreferrer\">nvm</a>）</li>\n<li>yarn：安装 yarn 前请先完成 NodeJS 安装。 <code>npm install -g yarn</code></li>\n</ul>\n<div><p>Tips</p>\n<p>腾讯COS、Amazon S3、wasabi 等也可提供 S3 服务。<br>\n暂不支持阿里OSS。</p>\n</div>\n<h2 id=\"安装-hydro\"> 安装 Hydro</h2>\n<div><pre><code><span>yarn</span> global <span>add</span> npx <span># 安装 npx 工具</span>\n<span>git</span> clone https://github.com/hydro-dev/Hydro.git /root/Hydro --recursive <span># 下载至 /root/Hydro 文件夹</span>\n<span>cd</span> /root/Hydro <span># 进入工作目录</span>\n<span>yarn</span> <span>install</span> <span># 安装依赖包</span>\n<span>yarn</span> build <span># 编译后端</span>\n<span>yarn</span> build:ui:production <span># 编译前端</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h2 id=\"启动-hydro\"> 启动 Hydro</h2>\n<p>支持如下启动参数：</p>\n<ul>\n<li><code>--port=8888</code> 指定启动端口</li>\n<li><code>--debug</code> 启用开发模式</li>\n<li><code>--ignorelock</code> 忽略 lockfile（不建议）</li>\n</ul>\n<p>您可以在后台运行 <code>yarn build:watch</code>，这将对后端源码进行实时转译，可在反复修改时节省编译时间。<br>\n您可以在后台运行 <code>yarn build:ui:dev</code>，这将对前端源码进行实时转译，可在反复修改时节省编译时间。<br>\n您可以使用 <code>yarn debug --port=2333</code> 启动 Hydro，配合上述两个命令同时使用，您可以在 2333 端口访问到 Hydro 实例，且前端的任何更改将即时生效。（更改后端代码后仍需要重启 Hydro 才能生效）</p>\n<p>首次启动会要求您填写数据库连接信息。请根据您数据库的安装填写（若无密码则留空）<br>\n出现 <code>Storage init fail</code> 提示是正常现象。请按照下文说明创建管理员账户，在系统设置的 file 部分填写 S3 服务的连接信息后重启 Hydro 即可正常使用。</p>\n<h2 id=\"更新\"> 更新</h2>\n<p>需要更新的时候进入对应仓库文件夹执行 <code>git pull</code>，然后重新 <code>yarn install &amp;&amp; yarn build &amp;&amp; yarn build:ui:production</code> 即可。</p>\n",
      "date_published": "2021-01-25T18:27:09.000Z",
      "date_modified": "2021-08-14T03:11:37.000Z",
      "authors": [],
      "tags": []
    }
  ]
}